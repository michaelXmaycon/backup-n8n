{"createdAt":"2025-05-19T17:34:07.514Z","updatedAt":"2025-05-22T23:05:44.000Z","id":"BoFybEXc8elIbZhZ","name":"generated img free","active":false,"isArchived":false,"nodes":[{"parameters":{"workflowInputs":{"values":[{"name":"Image Prompt"},{"name":"Message ID","type":"number"}]}},"type":"n8n-nodes-base.executeWorkflowTrigger","typeVersion":1.1,"position":[40,360],"id":"37c23e24-7a18-4618-b97a-ccafde808a1c","name":"When Executed by Another Workflow"},{"parameters":{"assignments":{"assignments":[{"id":"97a8bb4e-e9d2-4505-8275-612529907f89","name":"Responce","value":"=Success","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[1400,340],"id":"85e90d02-25e0-48a7-8cab-45109d7ba1d9","name":"Responce"},{"parameters":{"operation":"sendPhoto","chatId":"=834280584","binaryData":true,"additionalFields":{}},"type":"n8n-nodes-base.telegram","typeVersion":1.2,"position":[1180,340],"id":"336e51c8-5a1c-40fc-a56a-93ede8ee3d90","name":"Telegram","webhookId":"f344c2a5-c965-45c3-94af-1f0c89dbb3a6","credentials":{"telegramApi":{"id":"0NV80ri68xoFuxql","name":"Telegram account"}}},{"parameters":{"mode":"jsonToBinary","convertAllData":false,"sourceKey":"=base64","options":{"dataIsBase64":true,"fileName":"image.png","mimeType":"image/png"}},"id":"d07bc8f5-024d-4f15-9767-3837ea2534c3","name":"Convert to/from binary data","type":"n8n-nodes-base.moveBinaryData","typeVersion":1,"position":[960,340]},{"parameters":{"assignments":{"assignments":[{"id":"97a8bb4e-e9d2-4505-8275-612529907f89","name":"Responce","value":"=There was an error, try again","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[740,520],"id":"73f93491-4f7c-4b05-bb46-8e8439ec5a44","name":"Error Responce"},{"parameters":{"assignments":{"assignments":[{"id":"6a66c349-0b72-45c0-aa8a-09951a9bafbe","name":"base64","value":"={{ $json.data[0].b64_json }}","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[740,340],"id":"cf393187-e797-48c3-935f-75acc3bd8b27","name":"Set base64"},{"parameters":{"method":"POST","url":"https://api.together.xyz/v1/images/generations","authentication":"genericCredentialType","genericAuthType":"httpHeaderAuth","sendBody":true,"specifyBody":"json","jsonBody":"={\n    \"model\": \"black-forest-labs/FLUX.1-schnell-Free\",\n    \"prompt\": \"{{ $json.Prompt }}\",\n    \"width\": 1024,\n    \"height\": 1024,\n    \"steps\": 4,\n    \"n\": 1,\n    \"response_format\": \"b64_json\"\n   }","options":{"response":{"response":{}}}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[500,360],"id":"6bdeccb2-c00b-4054-b2bc-185a94b8107b","name":"Together.ai - Generate image","credentials":{"httpHeaderAuth":{"id":"YLIJzXvBZurBhNCd","name":"Together.ai"}},"onError":"continueErrorOutput"},{"parameters":{"assignments":{"assignments":[{"id":"2dd14b7d-6531-4c29-99a1-8361654d55f9","name":"Prompt","value":"={{ $json[\"Image Prompt\"] }}","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[280,360],"id":"a480ce3c-4871-4c23-834f-aee8596ede0e","name":"Set Prompt & message ID"},{"parameters":{"content":"**üß† Workflow for Assistant Agent (Image Generation + Telegram Delivery)**  \nThis workflow is triggered by another workflow and is responsible for generating an image from a prompt using the Together.ai API and sending it to Telegram. Here's a breakdown:\n\n1. **Trigger** ‚Äì Activated by another workflow.  \n2. **Set Prompt & Message ID** ‚Äì Extracts and formats the input prompt and associated message ID.  \n3. **Together.ai - Generate Image** ‚Äì Sends the prompt to Together.ai to generate an image.  \n   - **Success ‚ûù** Continue with base64 setup.  \n   - **Error ‚ûù** Route to error response.  \n4. **Set base64** ‚Äì Stores the base64-encoded image.  \n5. **Convert to/from binary data** ‚Äì Converts JSON base64 string to binary format for Telegram compatibility.  \n6. **Telegram** ‚Äì Sends the image via `sendPhoto` to the specified chat.  \n7. **Response** ‚Äì Final confirmation/response of the process.  \n8. **Error Response** ‚Äì Handles failures from Together.ai.","height":700,"width":2060},"type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[0,0],"id":"03388007-a602-4342-a36e-62f359735b39","name":"Sticky Note"},{"parameters":{},"type":"n8n-nodes-base.manualTrigger","typeVersion":1,"position":[60,1160],"id":"ead29fe6-8533-4201-9902-c3a56d7c5823","name":"When clicking ‚ÄòTest workflow‚Äô"},{"parameters":{"model":"openai/gpt-4.1-nano","options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenRouter","typeVersion":1,"position":[660,1520],"id":"ecd22deb-9961-4efa-bf3e-a42cc1a9b7d7","name":"OpenRouter Chat Model","credentials":{"openRouterApi":{"id":"QdnxsfiR3etVIUeV","name":"OpenRouter account"}}},{"parameters":{"assignments":{"assignments":[{"id":"014f8eb5-5855-4864-94b5-8c20d818939e","name":"prompt","value":"=3D ultra realistic of {{ $json.response.text }} 9:16 ratio, 4K","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[1340,1160],"id":"6c50e502-5344-4d62-b781-4a35f22695af","name":"Edit Fields"},{"parameters":{"schemaType":"manual","inputSchema":"{\n  \"type\": \"array\",\n  \"items\": {\n    \"type\": \"object\",\n    \"properties\": {\n      \"animal\": { \"type\": \"string\" },\n      \"style\": { \"type\": \"string\" }\n    },\n    \"required\": [\"animal\", \"style\"]\n  }\n}\n"},"type":"@n8n/n8n-nodes-langchain.outputParserStructured","typeVersion":1.2,"position":[660,1320],"id":"37c993c8-8993-4c20-9c44-5c4c4dad52c4","name":"Structured Output Parser"},{"parameters":{"fieldToSplitOut":"output","options":{}},"type":"n8n-nodes-base.splitOut","typeVersion":1,"position":[740,1160],"id":"4f5fa7f7-846a-42db-a99b-e164afd3769e","name":"Split Out"},{"parameters":{"method":"POST","url":"https://api.together.xyz/v1/images/generations","authentication":"genericCredentialType","genericAuthType":"httpHeaderAuth","sendHeaders":true,"headerParameters":{"parameters":[{}]},"sendBody":true,"specifyBody":"json","jsonBody":"={\n  \"model\": \"black-forest-labs/FLUX.1-schnell-Free\",\n  \"prompt\": {{ JSON.stringify($json.prompt) }},\n  \"width\": 576,\n  \"height\": 1024,\n  \"steps\": 4,\n  \"n\": 1,\n  \"response_format\": \"b64_json\",\n  \"stop\": []\n}","options":{"response":{"response":{"fullResponse":true}}}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[1760,1180],"id":"85a0ba6a-f2e6-4e6f-8142-0bd78f7cbe63","name":"HTTP Request"},{"parameters":{"options":{}},"type":"n8n-nodes-base.splitInBatches","typeVersion":3,"position":[1540,1160],"id":"588ea3ce-fab4-4604-9284-485a4bdec96c","name":"Loop Over Items"},{"parameters":{"operation":"toBinary","sourceProperty":"base64","options":{}},"type":"n8n-nodes-base.convertToFile","typeVersion":1.1,"position":[2180,1180],"id":"fe478e83-f2f3-4982-8e13-567ffc3c5d85","name":"Convert to File"},{"parameters":{"amount":10},"type":"n8n-nodes-base.wait","typeVersion":1.1,"position":[2380,1180],"id":"b3e6e77b-a545-4265-9684-48cf452e20de","name":"Wait","webhookId":"74276acc-e402-42a8-9cd5-dffc3cb51c58"},{"parameters":{"promptType":"define","text":"create 6 different variations of the following\n\nAnimal: hamster\nStyle: roman armor, greek mythology\n\nChange the animal and the styles\n","hasOutputParser":true,"batching":{}},"type":"@n8n/n8n-nodes-langchain.chainLlm","typeVersion":1.5,"position":[320,1160],"id":"65e5caa9-3edf-433e-9dc9-3e7f4e1fe13c","name":"LLM - Variations Generator"},{"parameters":{"promptType":"define","text":"=Animal: humanoid buff Hedgehog\nStyle: sifi, modern milsim, Sonic the Hedgehog theme","messages":{"messageValues":[{"message":"=# Overview  \nYou are a master image prompt generator specialized in crafting detailed, high-quality prompts for advanced image models like Flux. Your task is to generate vivid, well-structured prompts that accurately depict an animal dressed in a specified style, with a matching background that complements the theme.\n\n## Instructions:  \n- Clearly describe the animal's appearance, including fur, feathers, or scales.  \n- Specify the outfit and accessories that reflect the given style, ensuring they fit naturally.  \n- Include details about the background that reinforce the style, creating a cohesive scene.  \n- Use rich, descriptive language to enhance visual fidelity.  \n- Avoid generic terms‚Äîopt for precise, imaginative descriptions that maximize prompt effectiveness.  \n- Never output quotation marks (\"\") or newlines (\\n)\n\n## Example  \n- Input:  \nAnimal: Fox  \nStyle: Cyberpunk\n\n- Output:  \nA sleek red fox with vibrant fur and piercing blue cybernetic eyes, wearing a futuristic black leather jacket with neon blue accents and glowing circuitry patterns. A high-tech visor covers one eye, displaying holographic data. The fox stands confidently on a rain-slicked city street illuminated by neon signs in Japanese and English. Hovering drones and bustling pedestrians in cybernetic attire add depth to the scene, while distant flying cars streak through the dark, misty skyline."}]},"batching":{}},"type":"@n8n/n8n-nodes-langchain.chainLlm","typeVersion":1.5,"position":[980,1160],"id":"b07a0bd8-1d56-45c7-9b76-6065887bb701","name":"LLM Prompt Generator"},{"parameters":{"assignments":{"assignments":[{"id":"31a2b3db-78a0-41b8-815f-ffb6c572279d","name":"base64","value":"={{ $json.body.data[0].b64_json }}","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[1980,1180],"id":"019606a9-0f74-4a56-b5d6-028218607b37","name":"Set base"},{"parameters":{"content":"**‚öôÔ∏è Test Workflow ‚Äì Image Generation Loop with LLM Variations**\n\nThis workflow generates multiple image variations from prompt ideas created by an LLM, and processes them in a loop. Ideal for bulk creative generation/testing.\n\n1. **Trigger: When clicking ‚ÄòTest workflow‚Äô** ‚Äì Manually initiated by user.\n2. **LLM Variations Generator** ‚Äì Generates multiple prompt ideas using a language model.\n3. **Split Out** ‚Äì Breaks the output into individual prompts for processing.\n4. **LLM Prompt Generator** ‚Äì Formats each variation into a proper image generation prompt.\n5. **Edit Fields** ‚Äì Manual editing or setup before generation.\n6. **Loop Over Items** ‚Äì Iterates through each prompt.\n    - For each:\n      7. **HTTP Request** ‚Äì Sends the prompt to Together.ai to generate an image.\n      8. **Set base** ‚Äì Stores the base64 image output.\n      9. **Convert to File** ‚Äì Converts base64 to a downloadable image file.\n     10. **Wait** ‚Äì Delays next iteration to control rate or API limits.\n11. **Structured Output Parser** *(optional)* ‚Äì Parses structured response (if needed).\n12. **OpenRouter Chat Model** *(optional)* ‚Äì Adds advanced AI logic to refine prompts or parse outputs.","height":940,"width":2820},"type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[0,720],"id":"fd05f9e3-cd0c-489f-86bd-cc4093d75580","name":"Sticky Note1"},{"parameters":{"method":"POST","url":"https://api.together.xyz/v1/images/generations","authentication":"genericCredentialType","genericAuthType":"httpHeaderAuth","sendBody":true,"specifyBody":"json","jsonBody":"={\n    \"model\": \"black-forest-labs/FLUX.1-schnell-Free\",\n    \"prompt\": \"A battle-hardened female soldier stands on a battlefield with futuristic weapons. Explosions, mechs, smoke, visor reflection, extreme close-up, portrait.\",\n    \"width\": 1024,\n    \"height\": 1024,\n    \"steps\": 4,\n    \"n\": 1,\n    \"response_format\": \"b64_json\"\n   }","options":{"response":{"response":{}}}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[280,1700],"id":"d9699211-f660-4bf4-8a25-906fd7d16ee8","name":"Together.ai - Generate image1","credentials":{"httpHeaderAuth":{"id":"YLIJzXvBZurBhNCd","name":"Together.ai"}},"onError":"continueErrorOutput"}],"connections":{"When Executed by Another Workflow":{"main":[[{"node":"Set Prompt & message ID","type":"main","index":0}]]},"Telegram":{"main":[[{"node":"Responce","type":"main","index":0}]]},"Convert to/from binary data":{"main":[[{"node":"Telegram","type":"main","index":0}]]},"Set base64":{"main":[[{"node":"Convert to/from binary data","type":"main","index":0}]]},"Together.ai - Generate image":{"main":[[],[{"node":"Error Responce","type":"main","index":0}]]},"Set Prompt & message ID":{"main":[[{"node":"Together.ai - Generate image","type":"main","index":0}]]},"When clicking ‚ÄòTest workflow‚Äô":{"main":[[{"node":"Together.ai - Generate image1","type":"main","index":0}]]},"OpenRouter Chat Model":{"ai_languageModel":[[{"node":"LLM Prompt Generator","type":"ai_languageModel","index":0},{"node":"LLM - Variations Generator","type":"ai_languageModel","index":0}]]},"Edit Fields":{"main":[[{"node":"Loop Over Items","type":"main","index":0}]]},"Structured Output Parser":{"ai_outputParser":[[{"node":"LLM - Variations Generator","type":"ai_outputParser","index":0}]]},"Split Out":{"main":[[{"node":"LLM Prompt Generator","type":"main","index":0}]]},"HTTP Request":{"main":[[{"node":"Set base","type":"main","index":0}]]},"Loop Over Items":{"main":[[],[{"node":"HTTP Request","type":"main","index":0}]]},"Convert to File":{"main":[[{"node":"Wait","type":"main","index":0}]]},"Wait":{"main":[[{"node":"Loop Over Items","type":"main","index":0}]]},"LLM - Variations Generator":{"main":[[{"node":"Split Out","type":"main","index":0}]]},"LLM Prompt Generator":{"main":[[{"node":"Edit Fields","type":"main","index":0}]]},"Set base":{"main":[[{"node":"Convert to File","type":"main","index":0}]]},"Together.ai - Generate image1":{"main":[[{"node":"Set base64","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"b88c7a78-6cb9-426d-a7ca-62af9ae1e0b8","triggerCount":0,"tags":[{"createdAt":"2025-05-04T11:03:17.202Z","updatedAt":"2025-05-04T11:03:17.202Z","id":"CL5V4CSTRXmkPvLz","name":"YT"},{"createdAt":"2025-05-19T18:31:36.247Z","updatedAt":"2025-05-19T18:31:36.247Z","id":"ZmeeKAVGHHX2NGmZ","name":"Benjamin Keating"}]}